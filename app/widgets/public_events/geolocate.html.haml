-# This is a hidden hook for the geolocator to
-# refresh when it has aquired the location. It
-# should not always run hence the condition on
-# @refresh_on_geolocate

= link_to "Refresh", 
  url_for_event('refresh', :radius => @radius), 
  :remote => true, 
  :"data-href-geolocate"=>true, 
  :"data-trigger-on-geolocate"=>@refresh_on_geolocate,
  :class => "hide"


.inline
  Within

  .btn-toolbar

    -# Drop down for selecting the radius of the
    -# locality search

    %span.btn-group
      %a.btn.dropdown-toggle(data-toggle="dropdown" href="#")
        =@radius
        km
        %span.caret
      %ul.dropdown-menu
        - [5, 10, 50, 100, 200, 500, 1000, 2000, 5000].each do |km|
          %li
            = link_to km, 
                 url_for_event('refresh', :radius => km, :city=>@city), 
                :remote => true, 
                :"data-href-refresh_on_geolocate"=>@refresh_on_geolocate, 
                :class => "hide"
  of

  .btn-toolbar

    -# Drop down for selecting the city of the locality
    -# search

    %span.btn-group

      -# Manually entering the city
      %input.btn.select-on-focus{'data-param'=>'city', 'data-href'=>url_for_event('refresh', :radius=>@radius), 'href'=>"#", 'value'=>@city}

      -# Pick from a dropdown of cities
      %a.btn.dropdown-toggle(data-toggle="dropdown" href="#")
        %span.caret
      %ul.dropdown-menu
        - %w(London Paris NewYork Berlin Melbourne Vienna Tokyo Shanghai Moscow).each do |city|
          %li
            = link_to city, 
                url_for_event('refresh', :radius => @radius, :city=>city), 
                :remote => true, 
                :class => "hide"
